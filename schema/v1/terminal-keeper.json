{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$ref": "#/definitions/terminal-keeper",
  "definitions": {
    "terminal-keeper": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "type": "string",
          "description": "Path of the json schema."
        },
        "active": {
          "type": "string",
          "default": "default",
          "description": "Used to determine which session to use."
        },
        "keepExistingTerminals": {
          "type": "boolean",
          "default": false,
          "description": "Keep existing terminals open when a session is executed."
        },
        "activateOnStartup": {
          "type": "boolean",
          "default": false,
          "description": "Activated the session when Visual Studio Code starts up."
        },
        "sessions": {
          "$ref": "#/sessions"
        }
      },
      "required": ["active", "sessions"]
    }
  },
  "sessions": {
    "type": "object",
    "additionalProperties": false,
    "description": "The sessions list",
    "patternProperties": {
      "default": {
        "$ref": "#/sessionItem"
      },
      "^.*$": {
        "$ref": "#/sessionItem"
      }
    },
    "required": ["default"]
  },
  "sessionItem": {
    "type": "array",
    "description": "The session item.",
    "items": {
      "$ref": "#/terminalSplit"
    }
  },
  "terminalSplit": {
    "type": "object",
    "description": "The terminal splits list.",
    "patternProperties": {
      "split": {
        "type": "array",
        "description": "The terminal split item.",
        "items": {
          "$ref": "#/terminalItem"
        }
      }
    }
  },
  "terminalItem": {
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "name": {
        "type": "string",
        "description": "A human-readable string which will be used to represent the terminal in the UI."
      },
      "commands": {
        "type": "array",
        "description": "The command list.",
        "items": {
          "type": "string",
          "description": "The command item."
        }
      },
      "autoExecuteCommands": {
        "type": "boolean",
        "default": false,
        "description": "Automatically execute the specified commands."
      },
      "color": {
        "enum": [
          "terminal.ansiBlack",
          "terminal.ansiBlue",
          "terminal.ansiBrightBlack",
          "terminal.ansiBrightBlue",
          "terminal.ansiBrightCyan",
          "terminal.ansiBrightGreen",
          "terminal.ansiBrightMagenta",
          "terminal.ansiBrightRed",
          "terminal.ansiBrightWhite",
          "terminal.ansiBrightYellow",
          "terminal.ansiCyan",
          "terminal.ansiGreen",
          "terminal.ansiMagenta",
          "terminal.ansiRed",
          "terminal.ansiWhite",
          "terminal.ansiYellow"
        ],
        "description": "The id of the color. The available colors are listed in https://code.visualstudio.com/docs/getstarted/theme-color-reference."
      },
      "cwd": {
        "type": "string",
        "description": "A path or Uri for the current working directory to be used for the terminal."
      },
      "env": {
        "type": "object",
        "description": "Object with environment variables that will be added to the editor process."
      },
      "hideFromUser": {
        "type": "boolean",
        "description": "When enabled the terminal will run the process as normal but not be surfaced to the user until Terminal.show is called. The typical usage for this is when you need to run something that may need interactivity but only want to tell the user about it when interaction is needed. Note that the terminals will still be exposed to all extensions as normal."
      },
      "icon": {
        "enum": [
          "accounts-view-bar-icon",
          "breakpoints-activate",
          "breakpoints-remove-all",
          "breakpoints-view-icon",
          "callhierarchy-incoming",
          "callhierarchy-outgoing",
          "callstack-view-icon",
          "callstack-view-session",
          "comments-view-icon",
          "debug-breakpoint",
          "debug-breakpoint-conditional",
          "debug-breakpoint-conditional-disabled",
          "debug-breakpoint-conditional-unverified",
          "debug-breakpoint-data",
          "debug-breakpoint-data-disabled",
          "debug-breakpoint-data-unverified",
          "debug-breakpoint-disabled",
          "debug-breakpoint-function",
          "debug-breakpoint-function-disabled",
          "debug-breakpoint-function-unverified",
          "debug-breakpoint-log",
          "debug-breakpoint-log-disabled",
          "debug-breakpoint-log-unverified",
          "debug-breakpoint-unsupported",
          "debug-breakpoint-unverified",
          "debug-collapse-all",
          "debug-configure",
          "debug-console",
          "debug-console-clear-all",
          "debug-console-evaluation-input",
          "debug-console-evaluation-prompt",
          "debug-console-view-icon",
          "debug-continue",
          "debug-disconnect",
          "debug-gripper",
          "debug-hint",
          "debug-pause",
          "debug-restart",
          "debug-restart-frame",
          "debug-reverse-continue",
          "debug-stackframe",
          "debug-stackframe-focused",
          "debug-start",
          "debug-step-back",
          "debug-step-into",
          "debug-step-out",
          "debug-step-over",
          "debug-stop",
          "default-view-icon",
          "diff-editor-next-change",
          "diff-editor-previous-change",
          "diff-editor-toggle-whitespace",
          "diff-insert",
          "diff-remove",
          "diff-review-close",
          "diff-review-insert",
          "diff-review-remove",
          "explorer-view-icon",
          "extensions-clear-search-results",
          "extensions-configure-recommended",
          "extensions-filter",
          "extensions-info-message",
          "extensions-install-count",
          "extensions-install-local-in-remote",
          "extensions-install-workspace-recommended",
          "extensions-manage",
          "extensions-rating",
          "extensions-refresh",
          "extensions-remote",
          "extensions-star-empty",
          "extensions-star-full",
          "extensions-star-half",
          "extensions-sync-enabled",
          "extensions-sync-ignored",
          "extensions-view-icon",
          "extensions-warning-message",
          "find-collapsed",
          "find-expanded",
          "find-next-match",
          "find-previous-match",
          "find-replace",
          "find-replace-all",
          "find-selection",
          "folding-collapsed",
          "folding-expanded",
          "getting-started-beginner",
          "getting-started-codespaces",
          "getting-started-item-checked",
          "getting-started-item-unchecked",
          "getting-started-setup",
          "goto-next-location",
          "goto-previous-location",
          "keybindings-add",
          "keybindings-edit",
          "keybindings-record-keys",
          "keybindings-sort",
          "loaded-scripts-view-icon",
          "marker-navigation-next",
          "marker-navigation-previous",
          "markers-view-filter",
          "markers-view-icon",
          "markers-view-multi-line-collapsed",
          "markers-view-multi-line-expanded",
          "notebook-clear",
          "notebook-collapsed",
          "notebook-delete-cell",
          "notebook-edit",
          "notebook-execute",
          "notebook-execute-all",
          "notebook-expanded",
          "notebook-kernel-configure",
          "notebook-kernel-select",
          "notebook-mimetype",
          "notebook-move-down",
          "notebook-move-up",
          "notebook-open-as-text",
          "notebook-render-output",
          "notebook-revert",
          "notebook-split-cell",
          "notebook-state-error",
          "notebook-state-success",
          "notebook-stop",
          "notebook-stop-edit",
          "notebook-unfold",
          "notifications-clear",
          "notifications-clear-all",
          "notifications-collapse",
          "notifications-configure",
          "notifications-expand",
          "notifications-hide",
          "open-editors-view-icon",
          "outline-view-icon",
          "output-view-icon",
          "panel-close",
          "panel-maximize",
          "panel-restore",
          "parameter-hints-next",
          "parameter-hints-previous",
          "ports-forward-icon",
          "ports-open-browser-icon",
          "ports-stop-forward-icon",
          "ports-view-icon",
          "preferences-clear-input",
          "preferences-open-settings",
          "private-ports-view-icon",
          "public-ports-view-icon",
          "refactor-preview-view-icon",
          "remote-explorer-documentation",
          "remote-explorer-feedback",
          "remote-explorer-get-started",
          "remote-explorer-report-issues",
          "remote-explorer-review-issues",
          "remote-explorer-view-icon",
          "review-comment-collapse",
          "run-view-icon",
          "search-clear-results",
          "search-collapse-results",
          "search-details",
          "search-expand-results",
          "search-hide-replace",
          "search-new-editor",
          "search-refresh",
          "search-remove",
          "search-replace",
          "search-replace-all",
          "search-show-context",
          "search-show-replace",
          "search-stop",
          "search-view-icon",
          "settings-add",
          "settings-discard",
          "settings-edit",
          "settings-folder-dropdown",
          "settings-group-collapsed",
          "settings-group-expanded",
          "settings-more-action",
          "settings-remove",
          "settings-sync-view-icon",
          "settings-view-bar-icon",
          "source-control-view-icon",
          "suggest-more-info",
          "tasks-list-configure",
          "tasks-remove",
          "terminal-kill",
          "terminal-new",
          "terminal-rename",
          "terminal-view-icon",
          "test-view-icon",
          "testing-cancel-icon",
          "testing-debug-icon",
          "testing-error-icon",
          "testing-failed-icon",
          "testing-passed-icon",
          "testing-queued-icon",
          "testing-run-all-icon",
          "testing-run-icon",
          "testing-show-as-list-icon",
          "testing-skipped-icon",
          "testing-unset-icon",
          "timeline-open",
          "timeline-pin",
          "timeline-refresh",
          "timeline-unpin",
          "timeline-view-icon",
          "variables-view-icon",
          "view-pane-container-collapsed",
          "view-pane-container-expanded",
          "watch-expressions-add",
          "watch-expressions-add-function-breakpoint",
          "watch-expressions-remove-all",
          "watch-view-icon",
          "widget-close"
        ],
        "description": "The id of the icon. The available icons are listed in https://code.visualstudio.com/api/references/icons-in-labels#icon-listing."
      },
      "isTransient": {
        "type": "boolean",
        "description": "Opt-out of the default terminal persistence on restart and reload. This will only take effect when terminal.integrated.enablePersistentSessions is enabled."
      },
      "location": {
        "type": "object",
        "description": "The TerminalLocation or TerminalEditorLocationOptions or TerminalSplitLocationOptions for the terminal."
      },
      "message": {
        "type": "string",
        "description": "A message to write to the terminal on first launch, note that this is not sent to the process but, rather written directly to the terminal. This supports escape sequences such a setting text style"
      },
      "shellArgs": {
        "type": "array",
        "description": "Args for the custom shell executable. A string can be used on Windows only which allows specifying shell args in command-line format."
      },
      "shellPath": {
        "type": "string",
        "description": "A path to a custom shell executable to be used in the terminal."
      },
      "strictEnv": {
        "type": "boolean",
        "description": "Whether the terminal process environment should be exactly as provided in TerminalOptions.env. When this is false (default), the environment will be based on the window's environment and also apply configured platform settings like terminal.integrated.env.windows on top. When this is true, the complete environment must be provided as nothing will be inherited from the process or any configuration."
      }
    },
    "required": ["name", "commands"]
  }
}
